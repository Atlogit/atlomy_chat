# GitHub Actions Feature Branch Testing Workflow
name: Feature Branch Manual Test

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to test'
        required: true
      test_type:
        description: 'Type of tests to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - backend
          - frontend
          - quick

jobs:
  feature-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch }}
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      if: ${{ github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'backend' }}
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install .
        pip install pytest pytest-asyncio python-dotenv
    
    - name: Create .env file for feature testing
      run: |
        cp .env.example .env
        echo "FEATURE_BRANCH=${{ github.event.inputs.branch }}" >> .env
    
    - name: Run backend tests
      if: ${{ github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'backend' }}
      run: |
        pytest tests/ \
          --ignore=tests/production \
          --ignore=tests/integration \
          -v
      env:
        DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost/test_feature_amta
        REDIS_HOST: localhost
        AWS_BEDROCK_REGION: us-east-1
        AWS_BEDROCK_MODEL_ID: test-model

  frontend-feature-test:
    if: ${{ github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'frontend' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: next-app

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch }}
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: next-app/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint
      run: npm run lint
    
    - name: Type check
      run: npm run type-check
    
    - name: Run tests
      run: npm test
