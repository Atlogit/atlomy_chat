# GitHub Actions Production Deployment Workflow
name: Production Deployment

on:
  push:
    branches:
      - production
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment without additional checks'
        required: false
        default: 'false'

jobs:
  pre-deployment-checks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install python-dotenv
    
    - name: Create .env file
      run: |
        if [ ! -f .env ]; then
          cp .env.example .env
        fi
    
    - name: Run final configuration validation
      run: python config_validator.py
      env:
        DEPLOYMENT_MODE: production

  deploy-to-production:
    needs: pre-deployment-checks
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.ref_name }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: amta-production
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
    - name: Deploy to EC2
      run: |
        # Add deployment script or SSH commands
        echo "Deploying to production EC2 instance"
        # Example: ssh user@server 'cd /path && docker-compose pull && docker-compose up -d'

  post-deployment-verification:
    needs: deploy-to-production
    runs-on: ubuntu-latest
    steps:
    - name: Run health checks
      run: |
        # Add production health check commands
        echo "Running production health verification"
        # Potential health check script or curl to endpoint
        # curl -f https://production-endpoint/health || exit 1
