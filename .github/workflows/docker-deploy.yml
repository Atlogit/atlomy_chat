# GitHub Actions Workflow for Docker Build and Deploy
# Ensures containerization, testing, and deployment processes
# Visible workflow for AMTA project CI/CD pipeline
# Last updated: 2024-01-16
name: Docker Build and Deploy

on:
  push:
    branches: 
      - main
      - develop
      - production
  pull_request:
    branches:
      - main
      - develop
      - production

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  test-docker-image:
    needs: build-and-push-image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Pull Docker image
        run: docker-compose pull

      - name: Run Docker Compose
        run: docker-compose up -d

      - name: Check running containers
        run: docker ps

      - name: Run tests inside container
        run: |
          docker-compose exec -T app pytest tests/

      - name: Stop Docker Compose
        run: docker-compose down

  deploy:
    needs: test-docker-image
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Production or Main
        run: |
          echo "Deployment to production or main server"
          # Add your deployment script or SSH commands here
          # Example: ssh user@server 'cd /path && docker-compose pull && docker-compose up -d'
