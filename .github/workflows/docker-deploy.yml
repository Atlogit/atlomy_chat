name: Docker Build and Registry Push

on:
  push:
    branches:
      - production
    paths:
      # Backend Application
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'requirements.txt'
      - 'pyproject.toml'
      - '.github/workflows/docker-deploy.yml'
      - 'app/**'
      - 'config_validator.py'
      - 'alembic/**'
      - 'app/core/**'
      - 'app/models/**'
      - 'app/services/**'
      - 'app/api/**'

      # Next.js Frontend Application
      - 'next-app/package.json'
      - 'next-app/package-lock.json'
      - 'next-app/next.config.js'
      - 'next-app/tsconfig.json'
      - 'next-app/postcss.config.js'
      - 'next-app/tailwind.config.js'
      - 'next-app/src/**'
      - 'next-app/public/**'
      - 'next-app/.babelrc'
      - 'next-app/jest.config.js'

  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force Docker build and push'
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  packages: write
  id-token: write
  actions: write

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: ${{ github.repository }}-backend
  FRONTEND_IMAGE_NAME: ${{ github.repository }}-frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: production

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.18.0'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3 botocore awscli

      - name: Create .env file
        run: |
          if [ ! -f .env ]; then
            cp .env.example .env
            echo "Created .env file from .env.example"
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Backend Image Build and Push
      - name: Extract backend metadata
        id: backend-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}
          tags: |
            type=raw,value=production
            type=sha,prefix=production-backend-

      - name: Build and test backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.backend
          load: true
          tags: ${{ steps.backend-meta.outputs.tags }}
          labels: ${{ steps.backend-meta.outputs.labels }}

      # Frontend Image Build and Push
      - name: Extract frontend metadata
        id: frontend-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}
          tags: |
            type=raw,value=production
            type=sha,prefix=production-frontend-

      - name: Build and test frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./next-app
          file: ./next-app/Dockerfile
          load: true
          tags: ${{ steps.frontend-meta.outputs.tags }}
          labels: ${{ steps.frontend-meta.outputs.labels }}

      # Configuration Validation
      - name: Run configuration validator
        run: |
          python config_validator.py .env.production
        env:
          DEPLOYMENT_MODE: production
          AWS_DEFAULT_REGION: us-east-1

      # Push Images
      - name: Push backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.backend
          push: true
          tags: ${{ steps.backend-meta.outputs.tags }}
          labels: ${{ steps.backend-meta.outputs.labels }}

      - name: Push frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./next-app
          file: ./next-app/Dockerfile
          push: true
          tags: ${{ steps.frontend-meta.outputs.tags }}
          labels: ${{ steps.frontend-meta.outputs.labels }}

      # Trigger Production Deployment
      - name: Trigger Next Workflow with PAT
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $PAT" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/Atlogit/atlomy_chat/actions/workflows/production-deploy.yml/dispatches \
            -d '{"ref":"production"}'
