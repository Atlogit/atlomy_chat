# GitHub Actions Workflow for Docker Build, Test, and Registry Push
name: Docker Build and Registry Push

on:
  push:
    branches:
      - production

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  debug-branch-context:
    runs-on: ubuntu-latest
    steps:
      - name: Detailed Branch Context Debug
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "Branch Debug Information:"
          echo "GitHub Ref: ${{ github.ref }}"
          echo "GitHub Head Ref: ${{ github.head_ref }}"
          echo "Triggering Branch: ${{ github.ref_name }}"
          echo "Full GitHub Context:"
          echo "$GITHUB_CONTEXT"

  build-and-push:
    needs: debug-branch-context
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history to ensure branch context

      - name: Verbose Branch Verification
        run: |
          echo "Current Branch: $(git branch --show-current)"
          git branch -a
          git log -1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Verify AWS credentials
        run: |
          aws sts get-caller-identity
          aws secretsmanager list-secrets

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3 botocore awscli

      - name: Create .env file
        run: |
          if [ ! -f .env ]; then
            cp .env.example .env
            echo "Created .env file from .env.example"
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Start services
        run: docker-compose up -d

      - name: Run configuration validator
        run: |
          python config_validator.py .env.production
        env:
          DEPLOYMENT_MODE: production
          AWS_DEFAULT_REGION: us-east-1

      - name: Push Docker image to GitHub Container Registry
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Stop services
        run: docker-compose down

      - name: Notify Workflow Status
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: Docker Build and Registry Push ${{ job.status == 'success' && '✅ Successful' || '❌ Failed' }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
