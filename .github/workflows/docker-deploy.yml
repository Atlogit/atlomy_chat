# GitHub Actions Workflow for Docker Build and Deploy
# Ensures containerization, testing, and deployment processes
# Visible workflow for AMTA project CI/CD pipeline
# Last updated: 2024-01-16
name: Docker Build and Deploy

on:
  push:
    branches: 
      - main
      - develop
      - production
  pull_request:
    branches:
      - main
      - develop
      - production

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history for all branches and tags
          fetch-depth: 0

      - name: List untracked files
        run: |
          git status
          git ls-files --others --exclude-standard

      - name: Verify docker-compose file
        run: |
          # Check if docker-compose.yml exists
          if [ ! -f docker-compose.yml ]; then
            echo "Attempting to locate docker-compose.yml"
            
            # List all untracked files to debug
            echo "Untracked files:"
            git ls-files --others --exclude-standard
            
            # Try to find the file in the repository
            COMPOSE_FILE=$(find . -name docker-compose.yml | head -n 1)
            
            if [ -n "$COMPOSE_FILE" ]; then
              echo "Found docker-compose.yml at $COMPOSE_FILE"
              cp "$COMPOSE_FILE" ./docker-compose.yml
            else
              echo "docker-compose.yml not found in repository"
              exit 1
            fi
          fi

          # Verify the file exists
          if [ -f docker-compose.yml ]; then
            echo "docker-compose.yml found"
            cat docker-compose.yml
          else
            echo "docker-compose.yml still not found"
            exit 1
          fi

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Pull Docker images
        run: docker-compose pull

      - name: Build Docker images
        run: docker-compose build

      - name: Start services
        run: docker-compose up -d

      - name: Check running containers
        run: docker ps

      - name: Run tests inside container
        run: |
          docker-compose exec -T app pytest tests/

      - name: Stop services
        run: docker-compose down

  test-docker-image:
    needs: build-and-push-image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history for all branches and tags
          fetch-depth: 0

      - name: List untracked files
        run: |
          git status
          git ls-files --others --exclude-standard

      - name: Verify docker-compose file
        run: |
          # Check if docker-compose.yml exists
          if [ ! -f docker-compose.yml ]; then
            echo "Attempting to locate docker-compose.yml"
            
            # List all untracked files to debug
            echo "Untracked files:"
            git ls-files --others --exclude-standard
            
            # Try to find the file in the repository
            COMPOSE_FILE=$(find . -name docker-compose.yml | head -n 1)
            
            if [ -n "$COMPOSE_FILE" ]; then
              echo "Found docker-compose.yml at $COMPOSE_FILE"
              cp "$COMPOSE_FILE" ./docker-compose.yml
            else
              echo "docker-compose.yml not found in repository"
              exit 1
            fi
          fi
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Pull Docker image
        run: docker-compose pull

      - name: Run Docker Compose
        run: docker-compose up -d

      - name: Check running containers
        run: docker ps

      - name: Run tests inside container
        run: |
          docker-compose exec -T app pytest tests/

      - name: Stop Docker Compose
        run: docker-compose down

  deploy:
    needs: test-docker-image
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Production or Main
        run: |
          echo "Deployment to production or main server"
          # Add your deployment script or SSH commands here
          # Example: ssh user@server 'cd /path && docker-compose pull && docker-compose up -d'
