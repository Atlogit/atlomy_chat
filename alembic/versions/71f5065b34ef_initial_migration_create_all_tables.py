"""Initial migration - create all tables

Revision ID: 71f5065b34ef
Revises: 
Create Date: 2024-10-25 17:57:27.256829

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '71f5065b34ef'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('authors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('normalized_name', sa.String(), nullable=True),
    sa.Column('language_code', sa.String(length=5), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lemmas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lemma', sa.String(), nullable=False, comment='The base form (lemma) of the word'),
    sa.Column('language_code', sa.String(length=5), nullable=True, comment="ISO language code (e.g., 'grc' for ancient Greek)"),
    sa.Column('categories', sa.ARRAY(sa.String()), nullable=False, comment='Categories or classifications for this lemma'),
    sa.Column('translations', sa.JSON(), nullable=True, comment='Translations and additional linguistic metadata'),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lemma_analyses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lemma_id', sa.Integer(), nullable=False),
    sa.Column('analysis_text', sa.Text(), nullable=False, comment='Full text of the LLM-generated analysis'),
    sa.Column('analysis_data', sa.JSON(), nullable=True, comment='Structured data from the analysis (e.g., key findings, patterns)'),
    sa.Column('citations', sa.JSON(), nullable=True, comment='Citations and references supporting the analysis'),
    sa.Column('created_by', sa.String(), nullable=False, comment='Identifier for the creator of this analysis'),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['lemma_id'], ['lemmas.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('texts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('reference_code', sa.String(length=20), nullable=True),
    sa.Column('text_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('text_divisions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text_id', sa.Integer(), nullable=False),
    sa.Column('book_level_1', sa.String(), nullable=True),
    sa.Column('book_level_2', sa.String(), nullable=True),
    sa.Column('book_level_3', sa.String(), nullable=True),
    sa.Column('book_level_4', sa.String(), nullable=True),
    sa.Column('volume', sa.String(), nullable=True),
    sa.Column('chapter', sa.String(), nullable=True),
    sa.Column('section', sa.String(), nullable=True),
    sa.Column('division_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['text_id'], ['texts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('text_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('division_id', sa.Integer(), nullable=False),
    sa.Column('line_number', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('categories', sa.ARRAY(sa.String()), nullable=False, comment='Categories extracted from spaCy analysis for efficient querying'),
    sa.Column('spacy_tokens', sa.JSON(), nullable=True, comment='Complete spaCy token data including lemmas, POS tags, etc.'),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['division_id'], ['text_divisions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('text_lines')
    op.drop_table('text_divisions')
    op.drop_table('texts')
    op.drop_table('lemma_analyses')
    op.drop_table('lemmas')
    op.drop_table('authors')
    # ### end Alembic commands ###
