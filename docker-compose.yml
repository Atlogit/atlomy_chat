version: '3.8'
services:
  postgres:
    image: postgres:14
    container_name: amta-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      # Add performance tuning parameters
      - POSTGRES_MAX_CONNECTIONS=100
      - POSTGRES_SHARED_BUFFERS=256MB
      - POSTGRES_EFFECTIVE_CACHE_SIZE=768MB
    volumes:
      - ${POSTGRES_DATA_DIR:-postgres_data}:/var/lib/postgresql/data
    #network_mode: "host"
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h ${POSTGRES_HOST} -p ${POSTGRES_PORT}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    command:
      - "postgres"
      - "-c"
      - "max_connections=100"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "effective_cache_size=768MB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=256MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    ulimits:
      nproc: 65535
      nofile:
        soft: 26677
        hard: 46677
    shm_size: '256mb'



  backend:
    image: ghcr.io/atlogit/atlomy_chat-backend:production-backend-5528058
    #build: 
    #  context: .
    #  dockerfile: Dockerfile.backend
    container_name: amta-backend
    #network_mode: "host"
    ports:
      - "8081:8081"
    volumes:
      - ./logs:/amta/logs
      - ./.env:/amta/.env
      - ./alembic:/amta/alembic  # Mount Alembic migrations
    env_file:
      - .env
    environment:
      - ${POSTGRES_DATA_DIR:-postgres_data}:/var/lib/postgresql/data
      - PYTHONUNBUFFERED=1
      - DEPLOYMENT_MODE=${DEPLOYMENT_MODE}
      - REDIS_URL=${REDIS_URL}
      - AWS_REGION=${AWS_REGION}
      - BEDROCK_MODEL_ID=${BEDROCK_MODEL_ID}
      - DATABASE_URL=${DATABASE_URL}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8081
    restart: unless-stopped
    depends_on:
      - postgres
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    image: ghcr.io/atlogit/atlomy_chat-frontend:production-frontend-5528058
    #build:
    #  context: ./next-app
    #  dockerfile: Dockerfile
    container_name: amta-frontend
    #network_mode: "host"
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - BACKEND_URL=http://localhost:8081
    restart: unless-stopped
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:6.2-alpine
    container_name: amta-redis
    command: redis-server --databases 16 --port ${REDIS_PORT}
    #network_mode: "host"
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: >
        /bin/sh -c "redis-cli -a $$REDIS_PASSWORD ping"
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    sysctls:
      net.core.somaxconn: 1024
    ulimits:
      nproc: 65535
      nofile:
        soft: 26677
        hard: 46677





volumes:
  postgres_data:
    driver: local
  redis_data:
