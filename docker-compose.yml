version: '3.8'
services:
  postgres:
    image: postgres:14
    container_name: amta-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ${POSTGRES_DATA_DIR:-/var/lib/postgresql/data}
    #network_mode: "host"
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    image: ghcr.io/atlogit/atlomy_chat-backend:production-backend-bf3bf80
    #build: 
    #  context: .
    #  dockerfile: Dockerfile.backend
    container_name: amta-backend
    #network_mode: "host"
    ports:
      - "8081:8081"
    volumes:
      - ./logs:/amta/logs
      - ./.env:/amta/.env
      - ./alembic:/amta/alembic  # Mount Alembic migrations
    env_file:
      - .env
    environment:
      - POSTGRES_DATA_DIR=${POSTGRES_DATA_DIR:-/var/lib/postgresql/data}
      - PYTHONUNBUFFERED=1
      - DEPLOYMENT_MODE=${DEPLOYMENT_MODE}
      - REDIS_URL=${REDIS_URL}
      - AWS_REGION=${AWS_REGION}
      - BEDROCK_MODEL_ID=${BEDROCK_MODEL_ID}
      - DATABASE_URL=${DATABASE_URL}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8081
    restart: unless-stopped
    depends_on:
      - postgres
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    image: ghcr.io/atlogit/atlomy_chat-frontend:production-frontend-bf3bf80
    #build:
    #  context: ./next-app
    #  dockerfile: Dockerfile
    container_name: amta-frontend
    #network_mode: "host"
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - BACKEND_URL=http://localhost:8081
    restart: unless-stopped
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:6.2-alpine
    container_name: amta-redis
    #network_mode: "host"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
